@using BencoPracticeTransitions.Framework.Enums
@using BencoPracticeTransitions.Framework.Extensions
@using Microsoft.Extensions.Options
@using reCAPTCHA.AspNetCore
@model BencoPracticeTransitions.ViewModels.Home.ContactUsModel
@inject IOptions<RecaptchaSettings> RecaptchaSettings
@{
    ViewBag.Title = "Contact Us - Benco Practice Transitions";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)

    <br />

    <div class="row">
        <div class="col-sm-6">
            <div class="panel-body panel-primary">
                <div id="iosAlertPlaceholder"></div>
                <div><partial name="_Alert" /></div>
                <div class="panel panel-default" style="width: 100%">
                    <div class="panel-heading">
                        <div class="panel-title">
                            <h4>Contact Us</h4>
                        </div>
                    </div>

                    <div class="panel-body">
                        <div class="form-group">
                            @Html.LabelFor(m => m.FirstName)

                            <div>
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control window-unload-bound", placeholder = "John" })
                                @Html.ValidationMessageFor(m => m.FirstName)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(m => m.LastName)

                            <div>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control window-unload-bound", placeholder = "Doe" })
                                @Html.ValidationMessageFor(m => m.LastName)
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(m => m.PhoneNumber)

                            <div>
                                @Html.TextBoxFor(m => m.PhoneNumber, new { @class = "form-control window-unload-bound", placeholder = "1-800-462-3626" })
                                @Html.ValidationMessageFor(m => m.PhoneNumber)
                            </div>
                        </div>

                        <div class="form-group">

                            @Html.LabelFor(m => m.EmailAddress)

                            <div>
                                @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control window-unload-bound", placeholder = "jdoe@example.net" })
                                @Html.ValidationMessageFor(m => m.EmailAddress)
                            </div>
                        </div>
                        
                        <div class="form-group">

                            @Html.LabelFor(m => m.Message)

                            <div>
                                @Html.TextAreaFor(m => m.Message, new { @class = "form-control window-unload-bound", rows = 10, maxlength = "1000000", placeholder = "Enter your message" })
                                @Html.ValidationMessageFor(m => m.Message)
                            </div>
                        </div>


                        <div class="form-group">
                            @Html.LabelFor(m => m.HowDidYouHearAboutUs)

                            <div>
                                @Html.DropDownListFor(model => model.HowDidYouHearAboutUs, typeof(HowDidYouHearAboutUsEnum), false, true, new { @class = "form-control window-unload-bound" })
                                @Html.ValidationMessageFor(model => model.HowDidYouHearAboutUs)
                            </div>
                        </div>

                        <div class="form-group" id="howDidYouHearAboutUsDetailPanel">
                            <label id="howDidYouHearAboutUsDetailLabel" for="@nameof(Model.HowDidYouHearAboutUsDetail)">How did you hear about us details</label>
                            <div>
                                @Html.TextBoxFor(model => model.HowDidYouHearAboutUsDetail, new { @class = "form-control window-unload-bound" })
                                @Html.ValidationMessageFor(model => model.HowDidYouHearAboutUsDetail)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Recaptcha(RecaptchaSettings.Value)
                            @Html.ValidationMessage("reCaptchaError", new { @class = "text-danger" })
                        </div>
                        <input type="submit" value="Submit" class="btn btn-primary" style="max-width: 100px;" id="submit"/>

                    </div>
                </div>
            </div>
        </div>
    </div>

    @section scripts {
        <script src="~/js/recaptchaScrollFix.js"></script>
        <script type="text/javascript">
            $(document).ready(function() {
                ShowIosCompatibilityIfApplicable();
                SetHowDidYouHearAboutUsDetail();
            });

            document.getElementsByClassName('g-recaptcha')[0].setAttribute('data-callback', 'scrollFixCaptcha');
        </script>
    }
}
